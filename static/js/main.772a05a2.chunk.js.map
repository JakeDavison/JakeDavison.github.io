{"version":3,"sources":["StatsSubPanels/EstimatedEarnings.js","StatsSubPanels/Payouts.js","StatsSubPanels/HashRates.js","Stats.js","EthChart.js","App.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","StyledTableCell","withStyles","theme","head","fontWeight","body","color","TableCell","TitleTableCell","EstimatedEarnings","props","buildRow","name","multiplier","eth","daily","toFixed","eur","ethEur","console","log","ethPerMin","rows","classes","Grid","container","item","xs","justify","styles","flexBasis","className","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","align","TableBody","map","row","scope","Payouts","scheduleCountdown","interval","setInterval","secsToPayout","total","days","Math","floor","hours","mins","secs","setDays","setTime","generateCountdown","clearInterval","React","time","unpaidBalance","unpaid","secsToThreshold","secsToWeekend","now","Date","weekend","getSecsToWeekend","min","payoutAmount","style","padding","sum","a","b","Hashrates","avgHashes","ethermineResponse","sortedHashrates","statistics","sort","totalHashrates24","i","currentHashrate","reduce","totalHashrates12","slice","length","totalHashrates6","avgReportedHash","reportedHashrate","avgHash24","avgHash12","avgHash6","getAverageHashrates","data","HashRateData","currentStatistics","hashrate","ETHERMINE_URL","Stats","minerId","useParams","etherDashResponse","setEtherDashResponse","etherStatsResponse","setEtherStatsResponse","setEthEur","setEthermineResponse","fetch","then","r","json","status","fetchEtherDashData","fetchEtherStatsData","EUR","fetchEthEur","coinsPerMin","spacing","renderStatsNodes","EthChart","id","srcDoc","App","minerIdInput","setMinerIdInput","useCookie","userWalletCookie","setUserWalletCookie","history","useHistory","push","path","TextField","variant","value","onKeyDown","e","key","onChange","target","inputProps","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.772a05a2.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 320,\r\n    },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n    },\r\n    body: {\r\n        color: \"green\"\r\n    },\r\n}))(TableCell)\r\n\r\nconst TitleTableCell = withStyles((theme) => ({\r\n    body: {\r\n        fontWeight: \"bold\",\r\n    },\r\n}))(TableCell)\r\n\r\nexport default function EstimatedEarnings(props) {\r\n\r\n    function buildRow(name, multiplier) {\r\n        let eth = (daily * multiplier).toFixed(5) + \"ETH\";\r\n        let eur = \"â‚¬\" + (daily * multiplier * props.ethEur).toFixed(2);\r\n        console.log(eth, props.ethEur);\r\n        return {name, eth, eur};\r\n    }\r\n\r\n    let daily = props.ethPerMin * 60 * 24;\r\n\r\n    const rows = [\r\n        buildRow('Daily', 1),\r\n        buildRow('Weekly', 7),\r\n        buildRow('Monthly', 30),\r\n        buildRow('Yearly', 365),\r\n    ]\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container item xs={12} justify=\"center\" styles={{flexBasis: \"auto\"}}>\r\n            <div className=\"StatsSubPanelTitle\">\r\n                Estimated Earnings\r\n            </div>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell></StyledTableCell>\r\n                            <StyledTableCell align=\"right\">ETH</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">EUR</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TitleTableCell component=\"th\" scope=\"row\">{row.name}</TitleTableCell>\r\n                                <StyledTableCell align=\"right\">{row.eth}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.eur}</StyledTableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Grid>\r\n    );\r\n\r\n}","import * as React from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst payoutThreshold = 0.1\r\n\r\n\r\nfunction getSecsToWeekend() {\r\n\r\n    const now = Date.now();\r\n    var weekend = 1619960400;\r\n\r\n    while (weekend < now) {\r\n        weekend += (1000 * 60 * 60 * 24 * 7 * 2);\r\n    }\r\n\r\n    return (weekend - now) / 1000;\r\n\r\n}\r\n\r\n\r\n\r\nexport default function Payouts(props) {\r\n\r\n    function scheduleCountdown() {\r\n        const interval = setInterval(() => {\r\n            secsToPayout -= 1;\r\n            generateCountdown();\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }\r\n\r\n    function generateCountdown() {\r\n        let total = secsToPayout;\r\n        let days = Math.floor(total / (60 * 60 * 24));\r\n        total -= days * 60 * 60 * 24;\r\n        let hours = Math.floor(total / (60 * 60));\r\n        total -= hours * 60 * 60;\r\n        let mins = Math.floor(total / 60);\r\n        total -= mins * 60;\r\n        let secs = Math.floor(total);\r\n        setDays(days + \" day\" + (days !== 1 ? \"s\" : \"\"));\r\n        setTime(hours + \"h \" + mins + \"m \" + secs + \"s\");\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        scheduleCountdown();\r\n    }, []);\r\n\r\n    const [days, setDays] = React.useState(null);\r\n    const [time, setTime] = React.useState(null);\r\n\r\n    let unpaidBalance = props.unpaid * 1e-18;\r\n\r\n    let secsToThreshold = (0.1 - (props.unpaid * 1e-18)) / (props.ethPerMin / 60);\r\n    let secsToWeekend = getSecsToWeekend();\r\n    let secsToPayout = Math.min(secsToThreshold, secsToWeekend);\r\n\r\n    let payoutAmount = secsToWeekend < secsToThreshold ? (((secsToWeekend / 60) * props.ethPerMin) + unpaidBalance) : payoutThreshold;\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper style={{padding: \"0.3rem\"}}>\r\n                <Grid item container xs={12}>\r\n                    <Grid item xs={4}>\r\n                        <div className=\"Label\">Unpaid Balance</div>\r\n                        <div className=\"Data\">{unpaidBalance.toFixed(6) + \" ETH\"}</div>\r\n                        <div className=\"Data\">{\"â‚¬\" + (unpaidBalance * props.ethEur).toFixed(2)}</div>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <div className=\"Label\">Payout Amount</div>\r\n                        <div className=\"Data\">{payoutAmount.toFixed(6) + \" ETH\"}</div>\r\n                        <div className=\"Data\">{\"â‚¬\" + (payoutAmount * props.ethEur).toFixed(2)}</div>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <div className=\"Label\">Time to Payout</div>\r\n                        <div className=\"Data\">{days}</div>\r\n                        <div className=\"Data\">{time}</div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n\r\n}","import * as React from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst sum = (a, b) => a + b;\r\n\r\nfunction convertToMHs(hashrate) {\r\n    return (hashrate / 1000000).toFixed(2) + \" MH/s\";\r\n}\r\n\r\nfunction getAverageHashrates(ethermineResponse) {\r\n    let sortedHashrates = ethermineResponse.statistics.sort((a, b) => a.time > b.time);\r\n\r\n    let totalHashrates24 = sortedHashrates.map((i) => i.currentHashrate)\r\n        .reduce(sum, 0);\r\n\r\n    let totalHashrates12 = sortedHashrates.slice(sortedHashrates.length - 73, sortedHashrates.length - 1).map((i) => i.currentHashrate)\r\n        .reduce(sum, 0);\r\n\r\n    let totalHashrates6 = sortedHashrates.slice(sortedHashrates.length - 37, sortedHashrates.length - 1).map((i) => i.currentHashrate)\r\n        .reduce(sum, 0);\r\n\r\n    let totalReported = sortedHashrates.map((i) => i.reportedHashrate).reduce(sum, 0);\r\n\r\n    return {\r\n        avgReportedHash: totalReported / sortedHashrates.length,\r\n        avgHash24: totalHashrates24 / sortedHashrates.length,\r\n        avgHash12: totalHashrates12 / sortedHashrates.slice(sortedHashrates.length - 73, sortedHashrates.length - 1).length,\r\n        avgHash6: totalHashrates6 / sortedHashrates.slice(sortedHashrates.length - 37, sortedHashrates.length - 1).length\r\n    };\r\n}\r\n\r\nexport default function Hashrates(props) {\r\n\r\n    let avgHashes = getAverageHashrates(props.data);\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper style={{padding: \"0.3rem\"}}>\r\n                <Grid item container xs={12}>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"Label\">Current Hashrate</div>\r\n                        <HashRateData data={props.data.currentStatistics.currentHashrate}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"Label\">Average Hashrate - 6h</div>\r\n                        <HashRateData data={avgHashes.avgHash6}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"Label\">Reported Hashrate</div>\r\n                        <HashRateData data={props.data.currentStatistics.reportedHashrate}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"Label\">Average Hashrate - 12h</div>\r\n                        <HashRateData data={avgHashes.avgHash12}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"Label\">Reported Hashrate - 24h</div>\r\n                        <HashRateData data={avgHashes.avgReportedHash}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"Label\">Average Hashrate - 24h</div>\r\n                        <HashRateData data={avgHashes.avgHash24}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n\r\n    function HashRateData(props) {\r\n\r\n        return <div className=\"Data\">{convertToMHs(props.data)}</div>;\r\n\r\n\r\n    }\r\n\r\n}","import * as React from \"react\";\r\nimport StatsNode from \"./StatsSubPanels/StatsNode\";\r\nimport './Stats.css';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport EstimatedEarnings from \"./StatsSubPanels/EstimatedEarnings\";\r\nimport Payouts from \"./StatsSubPanels/Payouts\";\r\nimport HashRates from \"./StatsSubPanels/HashRates\";\r\n\r\nconst ETHERMINE_URL = \"https://api.ethermine.org/\";\r\nconst ETH_EUR_URL = \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=EUR\";\r\n\r\n\r\nfunction fetchEtherDashData(minerId, setEthermineResponse) {\r\n    fetch(ETHERMINE_URL + \"miner/\" + minerId + \"/dashboard\")\r\n        .then((r) => r.json())\r\n        .then((body) => setEthermineResponse({status: body.status, data: body.data}));\r\n}\r\n\r\nfunction fetchEtherStatsData(minerId, setEthermineResponse) {\r\n    fetch(ETHERMINE_URL + \"miner/\" + minerId + \"/currentStats\")\r\n        .then((r) => r.json())\r\n        .then((body) => setEthermineResponse({status: body.status, data: body.data}));\r\n}\r\n\r\nfunction fetchEthEur(setEthEur) {\r\n    fetch(ETH_EUR_URL)\r\n        .then((r) => r.json())\r\n        .then((body) => setEthEur(body.EUR));\r\n}\r\n\r\nexport default function Stats(props) {\r\n\r\n    let {minerId} = useParams();\r\n\r\n    function renderStatsPanel() {\r\n        if (etherDashResponse && etherStatsResponse && ethEur) {\r\n            return etherDashResponse.status === \"OK\" && etherStatsResponse.status === \"OK\" ?\r\n                renderStatsNodes() : \"Couldn't get data from Ethermine, status was: \" + etherDashResponse.status;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function renderStatsNodes() {\r\n\r\n        if (etherDashResponse.data && etherDashResponse.data.currentStatistics && etherStatsResponse.data) {\r\n            const ethPerMin = etherStatsResponse.data.coinsPerMin;\r\n\r\n            return (\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Payouts unpaid={etherStatsResponse.data.unpaid} ethPerMin={ethPerMin} ethEur={ethEur}/>\r\n                    <EstimatedEarnings ethPerMin={etherStatsResponse.data.coinsPerMin} ethEur={ethEur}/>\r\n                    <HashRates data={etherDashResponse.data}/>\r\n                </Grid>\r\n            );\r\n        }\r\n        return \"No data in Ethermine response.\";\r\n    }\r\n\r\n    const [etherDashResponse, setEtherDashResponse] = React.useState(null);\r\n    const [etherStatsResponse, setEtherStatsResponse] = React.useState(null);\r\n    const [ethEur, setEthEur] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        fetchEtherDashData(minerId, setEtherDashResponse);\r\n        fetchEtherStatsData(minerId, setEtherStatsResponse);\r\n        if (!ethEur) {\r\n            fetchEthEur(setEthEur);\r\n        }\r\n    }, [minerId]);\r\n\r\n\r\n    return (\r\n        <div className=\"StatsPanel\">\r\n            {renderStatsPanel()}\r\n        </div>\r\n    );\r\n}","import \"./Chart.css\"\r\n\r\nexport default function EthChart() {\r\n\r\n    const html = `<html lang=\"en\"> <div class=\"tradingview-widget-container\"> <div class=\"tradingview-widget-container__widget\"></div><script type=\"text/javascript\" src=\"https://s3.tradingview.com/external-embedding/embed-widget-mini-symbol-overview.js\" async> { \"symbol\": \"KRAKEN:ETHEUR\", \"width\": 320, \"height\": 200, \"locale\": \"en\", \"dateRange\": \"1D\", \"colorTheme\": \"light\", \"trendLineColor\": \"#37a6ef\", \"underLineColor\": \"#E3F2FD\", \"isTransparent\": false, \"autosize\": false, \"largeChartUrl\": \"\" } </script> </div> </html>`\r\n\r\n    return (\r\n        <div className=\"chartContainer\">\r\n            <iframe id=\"Chart\" srcDoc={html}/>\r\n        </div>\r\n    );\r\n\r\n}","import './App.css';\nimport TextField from \"@material-ui/core/TextField\";\nimport * as React from \"react\";\nimport Stats from \"./Stats\";\nimport EthChart from \"./EthChart\";\nimport {Switch, Route, useHistory} from \"react-router-dom\";\nimport useCookie from 'react-use-cookie';\n\nfunction App() {\n\n    const [minerIdInput, setMinerIdInput] = React.useState(null);\n    const [userWalletCookie, setUserWalletCookie] = useCookie(\"user-wallet\", null);\n\n    const history = useHistory();\n\n    if (userWalletCookie) {\n        history.push('/' + userWalletCookie);\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            history.push('/' + minerIdInput);\n            setUserWalletCookie(minerIdInput);\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"App-header\">\n                <EthChart/>\n                <Switch>\n                    <Route path=\"/:minerId\">\n                        <Stats/>\n                    </Route>\n                    <Route path=\"/\">\n                        <TextField\n                            className=\"MinerIdInput\"\n                            variant=\"outlined\"\n                            value={minerIdInput}\n                            onKeyDown={(e) => handleKeyDown(e)}\n                            onChange={(e) => setMinerIdInput(e.target.value)}\n                            inputProps={{style: {textAlign: 'center'}}}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App/>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}