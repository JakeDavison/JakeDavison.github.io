{"version":3,"sources":["StatsNode.js","Stats.js","App.js","index.js"],"names":["StatsNode","props","data","React","value","setValue","generateCountdown","total","days","Math","floor","hours","mins","secs","dataType","interval","setInterval","scheduleCountdown","parseFloat","toFixed","className","label","ETHERMINE_URL","sum","a","b","Stats","minerId","etherDashResponse","setEtherDashResponse","etherStatsResponse","setEtherStatsResponse","ethEur","setEthEur","setEthermineResponse","fetch","then","r","json","body","status","fetchEtherDashData","fetchEtherStatsData","EUR","fetchEthEur","currentStatistics","ethPerMin","coinsPerMin","currentStats","avgHashes","ethermineResponse","sortedHashrates","statistics","sort","time","totalHashrates24","map","i","currentHashrate","reduce","totalHashrates12","slice","length","totalHashrates6","avgReportedHash","reportedHashrate","avgHash24","avgHash12","avgHash6","getAverageHashrates","unpaidBalance","unpaid","earnings","secsToThreshold","secsToWeekend","now","Date","weekend","getSecsToWeekend","payoutAmount","unpaidSummary","console","log","Grid","style","flex","container","spacing","item","xs","min","renderStatsNodes","App","setMinerId","TextField","variant","onChange","e","target","inputProps","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f97eb23.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport './StatsNode.css';\r\n\r\n\r\nexport default function StatsNode(props) {\r\n\r\n    var data = props.data;\r\n\r\n    const [value, setValue] = React.useState();\r\n\r\n    function scheduleCountdown() {\r\n        const interval = setInterval(() => {\r\n            data -= 1;\r\n            generateCountdown();\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.dataType === \"secs\") {\r\n            scheduleCountdown();\r\n        }\r\n    }, []);\r\n\r\n    function generateCountdown() {\r\n        let total = data;\r\n        let days = Math.floor(total / (60 * 60 * 24));\r\n        total -= days * 60 * 60 * 24;\r\n        let hours = Math.floor(total / (60 * 60));\r\n        total -= hours * 60 * 60;\r\n        let mins = Math.floor(total / 60);\r\n        total -= mins * 60;\r\n        let secs = Math.floor(total);\r\n        setValue((days ? (days + \" Days \") : \"\") + (hours ? (hours + \" Hours \\n\") : \"\") + (mins ? (mins + \" Mins \") : \"\") + (secs + \" Secs\"));\r\n    }\r\n\r\n    if (!value) {\r\n        switch (props.dataType) {\r\n            case \"hashrate\":\r\n                setValue((parseFloat(data) / 1000000).toFixed(2) + \" MH/s\");\r\n                break;\r\n            case \"eur\":\r\n                setValue(\"â‚¬\" + parseFloat(data).toFixed(2));\r\n                break;\r\n            case \"secs\":\r\n                generateCountdown();\r\n                break;\r\n            default:\r\n                setValue(data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Data\">\r\n                {value}\r\n            </div>\r\n            <div className=\"Label\">\r\n                {props.label}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import * as React from \"react\";\r\nimport StatsNode from \"./StatsNode\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst ETHERMINE_URL = \"https://api.ethermine.org/\";\r\nconst ETH_EUR_URL = \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=EUR\";\r\n\r\nconst payoutThreshold = 0.1\r\n\r\n\r\nconst sum = (a, b) => a + b;\r\n\r\n\r\nfunction fetchEtherDashData(minerId, setEthermineResponse) {\r\n    fetch(ETHERMINE_URL + \"miner/\" + minerId + \"/dashboard\")\r\n        .then((r) => r.json())\r\n        .then((body) => setEthermineResponse({status: body.status, data: body.data}));\r\n}\r\n\r\nfunction fetchEtherStatsData(minerId, setEthermineResponse) {\r\n    fetch(ETHERMINE_URL + \"miner/\" + minerId + \"/currentStats\")\r\n        .then((r) => r.json())\r\n        .then((body) => setEthermineResponse({status: body.status, data: body.data}));\r\n}\r\n\r\nfunction fetchEthEur(setEthEur) {\r\n    fetch(ETH_EUR_URL)\r\n        .then((r) => r.json())\r\n        .then((body) => setEthEur(body.EUR));\r\n}\r\n\r\n\r\n\r\nfunction getAverageHashrates(ethermineResponse) {\r\n    let sortedHashrates = ethermineResponse.data.statistics.sort((a, b) => a.time > b.time);\r\n\r\n    let totalHashrates24 = sortedHashrates.map((i) => i.currentHashrate)\r\n        .reduce(sum, 0);\r\n\r\n    let totalHashrates12 = sortedHashrates.slice(sortedHashrates.length-73, sortedHashrates.length-1).map((i) => i.currentHashrate)\r\n        .reduce(sum, 0);\r\n\r\n    let totalHashrates6 = sortedHashrates.slice(sortedHashrates.length-37, sortedHashrates.length-1).map((i) => i.currentHashrate)\r\n        .reduce(sum, 0);\r\n\r\n    let totalReported = sortedHashrates.map((i) => i.reportedHashrate).reduce(sum, 0);\r\n\r\n    return {\r\n        avgReportedHash: totalReported/sortedHashrates.length,\r\n        avgHash24: totalHashrates24/sortedHashrates.length,\r\n        avgHash12: totalHashrates12/sortedHashrates.slice(sortedHashrates.length-73, sortedHashrates.length-1).length,\r\n        avgHash6: totalHashrates6/sortedHashrates.slice(sortedHashrates.length-37, sortedHashrates.length-1).length\r\n    };\r\n}\r\n\r\n\r\nfunction getSecsToWeekend() {\r\n\r\n    const now = Date.now();\r\n    var weekend = 1614902399000;\r\n\r\n    while (weekend < now) {\r\n        weekend += (1000*60*60*24*7*2);\r\n    }\r\n\r\n    return (weekend - now)/1000;\r\n\r\n}\r\n\r\nexport default function Stats(props) {\r\n\r\n    function renderStatsPanel() {\r\n        if (etherDashResponse && etherStatsResponse && ethEur) {\r\n            return etherDashResponse.status === \"OK\" && etherStatsResponse.status === \"OK\" ?\r\n                renderStatsNodes() : \"Couldn't get data from Ethermine, status was: \" + etherDashResponse.status;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function renderStatsNodes() {\r\n\r\n        if (etherDashResponse.data && etherDashResponse.data.currentStatistics && etherStatsResponse.data) {\r\n            const ethPerMin = etherStatsResponse.data.coinsPerMin;\r\n\r\n            let currentStats = etherDashResponse.data.currentStatistics;\r\n            let avgHashes = getAverageHashrates(etherDashResponse);\r\n            let unpaidBalance = etherStatsResponse.data.unpaid * 1e-18;\r\n            let earnings = ethPerMin * ethEur * 60 * 24;\r\n\r\n            let secsToThreshold = (0.1 - (etherStatsResponse.data.unpaid * 1e-18)) / (ethPerMin / 60);\r\n            let secsToWeekend = getSecsToWeekend();\r\n\r\n            let payoutAmount = secsToWeekend < secsToThreshold ? ((secsToWeekend/60)*ethPerMin*ethEur) + unpaidBalance : payoutThreshold*ethEur;\r\n\r\n            let unpaidSummary = \"â‚¬\" + (unpaidBalance*ethEur).toFixed(2) + \" / \" + unpaidBalance.toFixed(6) + \" ETH\";\r\n            console.log(unpaidSummary)\r\n            return (\r\n                <Grid style={{flex: 3}} container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <StatsNode label=\"Unpaid Balance\" data={unpaidSummary}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <StatsNode label=\"ETH Price\" data={ethEur} dataType=\"eur\"/>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <StatsNode label=\"Time To Payout\" data={Math.min(secsToWeekend, secsToThreshold)} dataType=\"secs\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <StatsNode label=\"Payout Amount\" data={payoutAmount} dataType=\"eur\"/>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <StatsNode label=\"Estimated Earnings Per Day\" data={earnings} dataType=\"eur\"/>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <StatsNode label=\"Estimated Earnings Per Week\" data={earnings*7} dataType=\"eur\"/>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <StatsNode label=\"Estimated Earnings Per Month\" data={earnings*30} dataType=\"eur\"/>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <StatsNode label=\"Estimated Earnings Per Year\" data={earnings*365} dataType=\"eur\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <StatsNode label=\"Current Hashrate\" data={currentStats.currentHashrate} dataType=\"hashrate\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <StatsNode label=\"Reported Hashrate\" data={currentStats.reportedHashrate} dataType=\"hashrate\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <StatsNode label=\"Average Reported Hashrate - Last 24H\" data={avgHashes.avgReportedHash} dataType=\"hashrate\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <StatsNode label=\"Average Hashrate - Last 24h\" data={avgHashes.avgHash24} dataType=\"hashrate\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <StatsNode label=\"Average Hashrate - Last 12h\" data={avgHashes.avgHash12} dataType=\"hashrate\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <StatsNode label=\"Average Hashrate - Last 6h\" data={avgHashes.avgHash6} dataType=\"hashrate\"/>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        }\r\n        return \"No data in Ethermine response.\";\r\n    }\r\n\r\n    var minerId = props.minerId;\r\n\r\n    const [etherDashResponse, setEtherDashResponse] = React.useState(null);\r\n    const [etherStatsResponse, setEtherStatsResponse] = React.useState(null);\r\n    const [ethEur, setEthEur] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        fetchEtherDashData(minerId, setEtherDashResponse);\r\n        fetchEtherStatsData(minerId, setEtherStatsResponse);\r\n        if(!ethEur) {fetchEthEur(setEthEur);}\r\n    }, [minerId]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {renderStatsPanel()}\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport TextField from \"@material-ui/core/TextField\";\nimport * as React from \"react\";\nimport Stats from \"./Stats\";\n\nfunction App() {\n\n    const [minerId, setMinerId] = React.useState(\"14b4DAB2b580BA2Ac1849055Ae8820Be87d8564E\");\n\n\n\n    return (\n        <div className=\"App\">\n            <TextField\n                className=\"MinerIdInput\"\n                variant=\"outlined\"\n                value={minerId}\n                onChange={(e) => setMinerId(e.target.value)}\n                inputProps={{style: {textAlign: 'center'}}}\n            />\n            <div className=\"App-header\">\n                {/*<EthChart/>*/}\n                <Stats minerId={minerId}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}